//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TesterFe.ServicioFe {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Respuesta", Namespace="http://schemas.datacontract.org/2004/07/FacturacionElectronica")]
    [System.SerializableAttribute()]
    public partial class Respuesta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FueOkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dato {
            get {
                return this.DatoField;
            }
            set {
                if ((object.ReferenceEquals(this.DatoField, value) != true)) {
                    this.DatoField = value;
                    this.RaisePropertyChanged("Dato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FueOk {
            get {
                return this.FueOkField;
            }
            set {
                if ((this.FueOkField.Equals(value) != true)) {
                    this.FueOkField = value;
                    this.RaisePropertyChanged("FueOk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaAutorizacion", Namespace="http://schemas.datacontract.org/2004/07/FacturacionElectronica")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterFe.ServicioFe.Respuesta))]
    public partial class RespuestaAutorizacion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FueOkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Dato {
            get {
                return this.DatoField;
            }
            set {
                if ((object.ReferenceEquals(this.DatoField, value) != true)) {
                    this.DatoField = value;
                    this.RaisePropertyChanged("Dato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FueOk {
            get {
                return this.FueOkField;
            }
            set {
                if ((this.FueOkField.Equals(value) != true)) {
                    this.FueOkField = value;
                    this.RaisePropertyChanged("FueOk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioFe.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/Firmar", ReplyAction="http://tempuri.org/IServicio/FirmarResponse")]
        TesterFe.ServicioFe.Respuesta Firmar(string xml, string nombreCertificado, string claveCertificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/Firmar", ReplyAction="http://tempuri.org/IServicio/FirmarResponse")]
        System.Threading.Tasks.Task<TesterFe.ServicioFe.Respuesta> FirmarAsync(string xml, string nombreCertificado, string claveCertificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/EnviarSri", ReplyAction="http://tempuri.org/IServicio/EnviarSriResponse")]
        TesterFe.ServicioFe.Respuesta EnviarSri(string xmlFirmado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/EnviarSri", ReplyAction="http://tempuri.org/IServicio/EnviarSriResponse")]
        System.Threading.Tasks.Task<TesterFe.ServicioFe.Respuesta> EnviarSriAsync(string xmlFirmado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AutorizarSri", ReplyAction="http://tempuri.org/IServicio/AutorizarSriResponse")]
        TesterFe.ServicioFe.RespuestaAutorizacion AutorizarSri(string claveAcceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AutorizarSri", ReplyAction="http://tempuri.org/IServicio/AutorizarSriResponse")]
        System.Threading.Tasks.Task<TesterFe.ServicioFe.RespuestaAutorizacion> AutorizarSriAsync(string claveAcceso);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : TesterFe.ServicioFe.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<TesterFe.ServicioFe.IServicio>, TesterFe.ServicioFe.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TesterFe.ServicioFe.Respuesta Firmar(string xml, string nombreCertificado, string claveCertificado) {
            return base.Channel.Firmar(xml, nombreCertificado, claveCertificado);
        }
        
        public System.Threading.Tasks.Task<TesterFe.ServicioFe.Respuesta> FirmarAsync(string xml, string nombreCertificado, string claveCertificado) {
            return base.Channel.FirmarAsync(xml, nombreCertificado, claveCertificado);
        }
        
        public TesterFe.ServicioFe.Respuesta EnviarSri(string xmlFirmado) {
            return base.Channel.EnviarSri(xmlFirmado);
        }
        
        public System.Threading.Tasks.Task<TesterFe.ServicioFe.Respuesta> EnviarSriAsync(string xmlFirmado) {
            return base.Channel.EnviarSriAsync(xmlFirmado);
        }
        
        public TesterFe.ServicioFe.RespuestaAutorizacion AutorizarSri(string claveAcceso) {
            return base.Channel.AutorizarSri(claveAcceso);
        }
        
        public System.Threading.Tasks.Task<TesterFe.ServicioFe.RespuestaAutorizacion> AutorizarSriAsync(string claveAcceso) {
            return base.Channel.AutorizarSriAsync(claveAcceso);
        }
    }
}
